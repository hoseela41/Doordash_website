{"ast":null,"code":"var _jsxFileName = \"/Users/hung-hsilin/Documents/LaiProject/doordash-app/src/components/FoodList.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Card, List, message, Select, Tooltip } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { addItemToCart, getMenus, getRestaurants } from \"../utils\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select; //\n// const AddToCartButton = ({ itemId }) => {\n//     const [loading, setLoading] = useState(false);\n//\n//     const AddToCart = () => {\n//         setLoading(true);\n//         addItemToCart(itemId)\n//             .then(() => message.success(`Successfully add item`))\n//             .catch((err) => message.error(err.message))\n//             .finally(() => {\n//                 setLoading(false);\n//             });\n//     };\n//\n//     return (\n//         <Tooltip title=\"Add to shopping cart\">\n//             <Button\n//                 loading={loading}\n//                 type=\"primary\"\n//                 icon={<PlusOutlined />}\n//                 onClick={AddToCart}\n//             />\n//         </Tooltip>\n//     );\n// };\n\nconst FoodList = () => {\n  _s();\n\n  const [foodData, setFoodData] = useState([]);\n  const [curRest, setCurRest] = useState();\n  const [restaurants, setRestaurants] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingRest, setLoadingRest] = useState(false);\n  useEffect(() => {\n    setLoadingRest(true);\n    getRestaurants().then(data => {\n      setRestaurants(data);\n    }).catch(err => {\n      message.error(err.message);\n    }).finally(() => {\n      setLoadingRest(false);\n    });\n  }, []);\n  useEffect(() => {\n    if (curRest) {\n      setLoading(true);\n      getMenus(curRest).then(data => {\n        setFoodData(data);\n      }).catch(err => {\n        message.error(err.message);\n      }).finally(() => {\n        setLoading(false);\n      });\n    }\n  }, [curRest]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      value: curRest,\n      onSelect: value => setCurRest(value),\n      placeholder: \"Select a restaurant\",\n      loading: loadingRest,\n      style: {\n        width: 300\n      },\n      onChange: () => {},\n      children: restaurants.map(item => {\n        return /*#__PURE__*/_jsxDEV(Option, {\n          value: item.id,\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), curRest && /*#__PURE__*/_jsxDEV(List, {\n      style: {\n        marginTop: 20\n      },\n      loading: loading,\n      grid: {\n        gutter: 16,\n        xs: 1,\n        sm: 2,\n        md: 4,\n        lg: 4,\n        xl: 3,\n        xxl: 3\n      },\n      dataSource: foodData,\n      renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: item.name,\n          extra: /*#__PURE__*/_jsxDEV(AddToCartButton, {\n            itemId: item.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 40\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.imageUrl,\n            alt: item.name,\n            style: {\n              height: 340,\n              width: \"100%\",\n              display: \"block\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }, this), `Price: ${item.price}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FoodList, \"L/vhZzlgbAaDwOLVAWG5p6d2gZ8=\");\n\n_c = FoodList;\nexport default FoodList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodList\");","map":{"version":3,"sources":["/Users/hung-hsilin/Documents/LaiProject/doordash-app/src/components/FoodList.js"],"names":["Button","Card","List","message","Select","Tooltip","useEffect","useState","addItemToCart","getMenus","getRestaurants","PlusOutlined","Option","FoodList","foodData","setFoodData","curRest","setCurRest","restaurants","setRestaurants","loading","setLoading","loadingRest","setLoadingRest","then","data","catch","err","error","finally","value","width","map","item","id","name","marginTop","gutter","xs","sm","md","lg","xl","xxl","imageUrl","height","display","price"],"mappings":"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","sourcesContent":["import { Button, Card, List, message, Select, Tooltip } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { addItemToCart, getMenus, getRestaurants } from \"../utils\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nconst { Option } = Select;\n//\n// const AddToCartButton = ({ itemId }) => {\n//     const [loading, setLoading] = useState(false);\n//\n//     const AddToCart = () => {\n//         setLoading(true);\n//         addItemToCart(itemId)\n//             .then(() => message.success(`Successfully add item`))\n//             .catch((err) => message.error(err.message))\n//             .finally(() => {\n//                 setLoading(false);\n//             });\n//     };\n//\n//     return (\n//         <Tooltip title=\"Add to shopping cart\">\n//             <Button\n//                 loading={loading}\n//                 type=\"primary\"\n//                 icon={<PlusOutlined />}\n//                 onClick={AddToCart}\n//             />\n//         </Tooltip>\n//     );\n// };\n\nconst FoodList = () => {\n    const [foodData, setFoodData] = useState([]);\n    const [curRest, setCurRest] = useState();\n    const [restaurants, setRestaurants] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [loadingRest, setLoadingRest] = useState(false);\n\n    useEffect(() => {\n        setLoadingRest(true);\n        getRestaurants()\n            .then((data) => {\n                setRestaurants(data);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n            .finally(() => {\n                setLoadingRest(false);\n            });\n    }, []);\n\n    useEffect(() => {\n        if (curRest) {\n            setLoading(true);\n            getMenus(curRest)\n                .then((data) => {\n                    setFoodData(data);\n                })\n                .catch((err) => {\n                    message.error(err.message);\n                })\n                .finally(() => {\n                    setLoading(false);\n                });\n        }\n    }, [curRest]);\n\n    return (\n        <>\n            <Select\n                value={curRest}\n                onSelect={(value) => setCurRest(value)}\n                placeholder=\"Select a restaurant\"\n                loading={loadingRest}\n                style={{ width: 300 }}\n                onChange={() => {}}\n            >\n                {restaurants.map((item) => {\n                    return <Option value={item.id}>{item.name}</Option>;\n                })}\n            </Select>\n            {curRest && (\n                <List\n                    style={{ marginTop: 20 }}\n                    loading={loading}\n                    grid={{\n                        gutter: 16,\n                        xs: 1,\n                        sm: 2,\n                        md: 4,\n                        lg: 4,\n                        xl: 3,\n                        xxl: 3,\n                    }}\n                    dataSource={foodData}\n                    renderItem={(item) => (\n                        <List.Item>\n                            <Card\n                                title={item.name}\n                                extra={<AddToCartButton itemId={item.id} />}\n                            >\n                                <img\n                                    src={item.imageUrl}\n                                    alt={item.name}\n                                    style={{ height: 340, width: \"100%\", display: \"block\" }}\n                                />\n                                {`Price: ${item.price}`}\n                            </Card>\n                        </List.Item>\n                    )}\n                />\n            )}\n        </>\n    );\n};\n\nexport default FoodList;"]},"metadata":{},"sourceType":"module"}