{"ast":null,"code":"var _jsxFileName = \"/Users/hung-hsilin/Documents/LaiProject/doordash-app/src/components/FoodList.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n// foodlist\nimport React, { useState, useEffect } from 'react';\nimport { Select, List, Card, Tooltip, Button, message } from 'antd';\nimport { getRestaurants, getMenus, addItemToCart } from \"../utils\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\n\nconst AddToCartButton = ({\n  itemId\n}) => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n\n  const addToCart = () => {\n    // step1: set loading -> true\n    // step2: add item to the server\n    // step2.1: case1: success\n    //          case2: fail\n    //          finally set loading -> false\n    setLoading(true);\n    addItemToCart(itemId).then(() => {\n      message.success(\"Successfully add item\");\n    }).catch(err => {\n      message.error(err.message);\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    title: \"Add to shopping cart\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 24\n      }, this),\n      type: \"primary\",\n      loading: loading,\n      onClick: addToCart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddToCartButton, \"/Rjh5rPqCCqf0XYnTUk9ZNavw3Q=\");\n\n_c = AddToCartButton;\n\nfunction FoodList(props) {\n  _s2();\n\n  const [loading, setLoading] = useState(false);\n  const [curRest, setCurRest] = useState();\n  const [restaurants, setRestaurants] = useState([]);\n  const [foodData, setFoodData] = useState([]); // didMount\n\n  useEffect(() => {\n    // step1: set loading status -> true\n    // step2: fetch restaurants data from the server\n    // step2.1:\n    //  case1: success, setRestaurants\n    //  case2: failed,\n    //  finally -> set loading status -> false\n    setLoading(true);\n    getRestaurants().then(resData => {\n      console.log('res data -> ', resData);\n      setRestaurants(resData);\n    }).catch(err => {\n      message.error(err.message);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []); // didUpdate -> updated selected restaurant\n\n  useEffect(() => {\n    // step1: set loading status -> true\n    // step2: get menu from the server\n    //  step2.1:\n    //      case1: success, setFoodData\n    //      case2: failed\n    //      finally: set loading status -> false\n    setLoading(true);\n    getMenus(curRest).then(menuData => {\n      console.log('menu -> ', menuData);\n      setFoodData(menuData);\n    }).catch(err => {\n      message.error(err.message);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, [curRest]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      value: curRest,\n      loading: loading,\n      placeholder: \"Select a restaurant\",\n      style: {\n        width: 300\n      },\n      onSelect: value => setCurRest(value),\n      children: restaurants.map(item => {\n        return /*#__PURE__*/_jsxDEV(Option, {\n          value: item.id,\n          children: item.name\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), curRest && /*#__PURE__*/_jsxDEV(List, {\n      style: {\n        marginTop: 20\n      },\n      grid: {\n        gutter: 16,\n        xs: 1,\n        sm: 2,\n        md: 4,\n        lg: 4,\n        xl: 3,\n        xxl: 3\n      },\n      dataSource: foodData,\n      renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: item.name,\n          extra: /*#__PURE__*/_jsxDEV(AddToCartButton, {\n            itemId: item.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 60\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.imageUrl,\n            alt: item.name,\n            style: {\n              height: \"auto\",\n              width: \"100%\",\n              display: \"block\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 33\n          }, this), `Price: ${item.price}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(FoodList, \"KJWtJfyVaogZtIIBz/MoMFidbcI=\");\n\n_c2 = FoodList;\nexport default FoodList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddToCartButton\");\n$RefreshReg$(_c2, \"FoodList\");","map":{"version":3,"sources":["/Users/hung-hsilin/Documents/LaiProject/doordash-app/src/components/FoodList.js"],"names":["React","useState","useEffect","Select","List","Card","Tooltip","Button","message","getRestaurants","getMenus","addItemToCart","PlusOutlined","Option","AddToCartButton","itemId","loading","setLoading","addToCart","then","success","catch","err","error","finally","FoodList","props","curRest","setCurRest","restaurants","setRestaurants","foodData","setFoodData","resData","console","log","menuData","width","value","map","item","id","name","marginTop","gutter","xs","sm","md","lg","xl","xxl","imageUrl","height","display","price"],"mappings":"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","sourcesContent":["// foodlist\nimport React, { useState, useEffect } from 'react';\nimport { Select, List, Card, Tooltip, Button, message } from 'antd';\nimport { getRestaurants, getMenus, addItemToCart } from \"../utils\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\n\nconst { Option } = Select;\n\nconst AddToCartButton = ( { itemId } ) => {\n    const [loading, setLoading] = useState(false);\n\n    const addToCart = () => {\n        // step1: set loading -> true\n        // step2: add item to the server\n        // step2.1: case1: success\n        //          case2: fail\n        //          finally set loading -> false\n        setLoading(true);\n        addItemToCart(itemId)\n            .then( () => {\n                message.success(\"Successfully add item\")\n            })\n            .catch( err => {\n                message.error(err.message)\n            })\n            .finally( () => {\n                setLoading(false);\n            })\n    }\n\n    return (\n        <Tooltip title=\"Add to shopping cart\">\n            <Button\n                icon={ <PlusOutlined />}\n                type=\"primary\"\n                loading={loading}\n                onClick={addToCart}\n            />\n        </Tooltip>\n    )\n}\n\nfunction FoodList(props) {\n    const [loading, setLoading] = useState(false);\n    const [curRest, setCurRest] = useState();\n    const [restaurants, setRestaurants] = useState([]);\n    const [foodData, setFoodData] = useState([]);\n\n    // didMount\n    useEffect( () => {\n        // step1: set loading status -> true\n        // step2: fetch restaurants data from the server\n        // step2.1:\n        //  case1: success, setRestaurants\n        //  case2: failed,\n        //  finally -> set loading status -> false\n        setLoading(true);\n        getRestaurants()\n            .then( resData => {\n                console.log('res data -> ', resData);\n                setRestaurants(resData);\n            })\n            .catch( err => {\n                message.error(err.message);\n            })\n            .finally( () => {\n                setLoading(false);\n            })\n\n    }, []);\n\n    // didUpdate -> updated selected restaurant\n    useEffect( () => {\n        // step1: set loading status -> true\n        // step2: get menu from the server\n        //  step2.1:\n        //      case1: success, setFoodData\n        //      case2: failed\n        //      finally: set loading status -> false\n        setLoading(true);\n        getMenus(curRest)\n            .then( menuData => {\n                console.log('menu -> ', menuData);\n                setFoodData(menuData);\n            })\n            .catch( err => {\n                message.error(err.message);\n            })\n            .finally( () => {\n                setLoading(false);\n            })\n    }, [curRest])\n\n    return (\n        <div>\n            <Select value={ curRest }\n                    loading={ loading }\n                    placeholder=\"Select a restaurant\"\n                    style={{ width: 300 }}\n                    onSelect={ value => setCurRest(value)}\n            >\n                {\n                    restaurants.map( item => {\n                        return <Option key={item.id} value={item.id}>{ item.name }</Option>\n                    })\n                }\n            </Select>\n            {\n                curRest\n                &&\n                <List\n                    style={{ marginTop: 20 }}\n                    grid={{\n                        gutter: 16,\n                        xs: 1,\n                        sm: 2,\n                        md: 4,\n                        lg: 4,\n                        xl: 3,\n                        xxl: 3,\n                    }}\n\n                    dataSource={foodData}\n                    renderItem={ item => (\n                        <List.Item>\n                            <Card title={item.name} extra={<AddToCartButton itemId={item.id}/>}>\n                                <img\n                                    src={item.imageUrl}\n                                    alt={item.name}\n                                    style={{ height: \"auto\", width: \"100%\", display: \"block\" }}\n                                />\n                                { `Price: ${item.price}`}\n                            </Card>\n                        </List.Item>\n                    )}\n                />\n            }\n        </div>\n    );\n}\n\nexport default FoodList;"]},"metadata":{},"sourceType":"module"}